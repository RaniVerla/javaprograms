import java.util.Arrays;
import java.util.Stack;

class Pair{
	
	int num;
	int index;
	Pair(int num, int index)
	{
		this.num=num;
		this.index=index;
	}
	
}

public class Test {

	//static Pair pair;
	public static void main(String[] args) {

		//int[] arr= {6,2,5,4,5,1,6};
		
		//int[] arr= {1,2,3,4,5};
		
		int[] arr= {11,11,10,10,10};
		
		MaxArea(arr);

	}

	private static void MaxArea(int[] arr) {

		    int[] NSR=nextSamllerRight(arr);
        int[] NSL=nextSamllerLeft(arr);
        int[] width=new int[arr.length];
        
        for(int i=0;i<arr.length;i++)
        {
        	width[i]=NSR[i]-NSL[i]-1;
        }        
        System.out.println(Arrays.toString(width));        
        long area=0;        
        
        for(int i=0;i<arr.length;i++)
        {
        	area=Math.max(area, arr[i]*width[i]);
        }        
        System.out.println(area);
  }

	private static int[] nextSamllerRight(int[] arr) {
		Stack<Pair> stack=new Stack<>();		
		int[] newarr=new int[arr.length];
		int pseudoindex=arr.length;
		for(int i=arr.length-1;i>=0;i--)
		{
			
			if(stack.isEmpty())
			{
				newarr[i]=pseudoindex;
			}
			else if(!stack.isEmpty() && arr[i] > stack.peek().num)
			{
				newarr[i]=stack.peek().index;
			}
			else
			{
				
				while(!stack.isEmpty() && arr[i] <= stack.peek().num)
				{
					stack.pop();
				}
				if(stack.isEmpty())
				{
					newarr[i]=pseudoindex;
				}else
				{
					newarr[i]=stack.peek().index;
				}
			}
			stack.push(new Pair(arr[i],i));
		}
		
		System.out.println(Arrays.toString(newarr));
		return newarr;
	}
	
private static int[] nextSamllerLeft(int[] arr) {
		Stack<Pair> stack=new Stack<>();
		int[] newarr=new int[arr.length];
		int pseudoindex=-1;
		for(int i=0;i<arr.length;i++)
		{
			if(stack.isEmpty())
			{
				newarr[i]=pseudoindex;
			}
			else if(!stack.isEmpty() && arr[i] > stack.peek().num)
			{
				newarr[i]=stack.peek().index;
			}
			else
			{				
				while(!stack.isEmpty() && arr[i] <= stack.peek().num)
				{
					stack.pop();
				}
				if(stack.isEmpty())
				{
					newarr[i]=pseudoindex;
				}else
				{
					newarr[i]=stack.peek().index;
				}
			}
			stack.push(new Pair(arr[i],i));
		}
		System.out.println(Arrays.toString(newarr));
		return newarr;
	}
}
